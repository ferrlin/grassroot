{-# LANGUAGE ApplicativeDo #-}

module Tests.MarketStall where

import Daml.Script
import PriceWatch
import Cooperative
import Inventory

ms_test = do
  alice  <- allocateParty "Alice"
  bob    <- allocateParty "Bob"
  coop   <- allocateParty "Coop"
  greg   <- allocateParty "Greg"
  jen    <- allocateParty "Jen"
  rusty  <- allocateParty "Rusty"

  coopCid <- coop `submit` do createCmd
    Cooperative with
      coop
      vendors = []
      offers = []

  (coopCid, gregInviteCid) <- coop `submit` do exerciseCmd coopCid InviteVendor with vendor = greg
  (coopCid, jenInviteCid) <- coop `submit` do exerciseCmd coopCid InviteVendor with vendor = jen
  (coopCid, bobInviteCid) <- coop `submit` do exerciseCmd coopCid InviteVendor with vendor = bob

  (gregStallCid, gregStallPermitCid) <- submit greg do exerciseCmd gregInviteCid AcceptInvitation



    -- Add Pricing for Barley
  gregPricingPropCid <- submit coop do
    createAndExerciseCmd
      PriceWatch with
        issuer = coop
        owner = coop
        productSymbol = "BRY"
        basePrice = 4.25
        retailPrice = 4.25
        currency = "USD"
        unit = "mg"
        locked = False
      Propose with
        newOwner = greg

  barleyPricingCid <- submit greg do exerciseCmd gregPricingPropCid Accept

  -- Add Product to sell
  gregProductCid <- submit rusty do
    createCmd Product with
      producer = rusty
      owner = greg
      label = "Barley"
      quantity = 30
      productSymbol = "BRY"

  gregInvCid <- submit greg do exerciseCmd gregProductCid AddInventory with receiver = greg, thisPricing = barleyPricingCid

  submit greg do exerciseCmd gregStallPermitCid ForSale with stallCid = gregStallCid, inventoryCid = gregInvCid
